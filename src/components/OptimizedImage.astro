---
import { Image } from 'astro:assets';

export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  quality?: number;
  format?: 'webp' | 'avif' | 'jpeg' | 'png';
}

const {
  src,
  alt,
  width = 800,
  height = 600,
  class: className = '',
  loading = 'lazy',
  quality = 80,
  format = 'webp'
} = Astro.props;

// Convert src to import for local images
const imagePath = src.startsWith('/') ? `../../public${src}` : src;

// Try to import the image, fallback to src if it fails
let imageImport;
try {
  if (src.startsWith('/')) {
    imageImport = await import(imagePath);
  }
} catch (e) {
  imageImport = null;
}
---

{imageImport ? (
  <Image
    src={imageImport.default}
    alt={alt}
    width={width}
    height={height}
    class={className}
    loading={loading}
    quality={quality}
    format={format}
    transition:name={`image-${alt}`}
  />
) : (
  <img
    src={src}
    alt={alt}
    width={width}
    height={height}
    class={className}
    loading={loading}
    transition:name={`image-${alt}`}
  />
)}